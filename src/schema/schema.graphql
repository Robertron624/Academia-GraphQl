type Query {
    "Lista de los estudiantes de la academia"
    estudiantes: [Estudiante!]!

    "Informacion de un estudiante por su Id"
    estudiante(id: ID!): Estudiante!

    "Lista de cursos de la academia"
    cursos: [Curso!]!

    "Informacion de un curso por su Id"
    curso(curso: ID!): Curso!
}

type Mutation {
    cursoNuevo(curso: CursoInput!): Curso!
    modificarCurso(curso: CursoInput!): Curso!
    eliminarCurso(id: ID!): Curso
}

input CursoInput {
    id: ID
    title: String!
    description: String!
    clases: Int!
    time: Float!
    logo: String!
    level: Nivel
    path: String!
    teacher: String!
}

"Informacion de los estudiantes"
type Estudiante {
    id: ID!,
    name: String!,
    email: String!,
    website: String,
    courses: [Curso!]!
}

type Curso{
    id: ID!,
    title: String!,
    description: String!,
    clases: Int!,
    time: Float!,
    logo: String!,
    level: Nivel!
    path: String!,
    teacher: String!,
    students: [Estudiante],
    reviews: [Valoracion!]!
}

enum Nivel {
    ALL,
    ROOKIES,
    MEDIUM,
    EXPERT
}

type  Valoracion {
    id: ID!,
    name: String!
    points: Float!,
    comment: String 
}